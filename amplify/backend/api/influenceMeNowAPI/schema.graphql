##################################################################### ESTRUCTURA DEL USUARIO #####################################################################
type User @model{
  tokenfb: String
  id: ID!
  userId: ID!
  name: String
  username: String
  lastname: String
  email: AWSEmail
  avatar: AWSURL
  phone: AWSPhone
  datetime: AWSDateTime!
  scope: Scope
  createContest: [CreateContest] @connection(name: "UserCreateContest")
  submitPrize: [SubmitPrize] @connection(name: "UserSubmitPrize")
  engage: [Engage] @connection(name: "UserEngage")
  coins: Int
  notificationToken: String
}

##################################################################### SCOPE #####################################################################

enum Scope {
  ENGAGE
  CREATECONTEST
  SUBMITPRIZE
}

##################################################################### CREATECONTEST #####################################################################

type CreateContest @model {
  id: ID!
  user: User @connection(name: "UserCreateContest")
  aboutTheUser: AboutTheUser!
  category: Category
  general: General!
  prizes: [Prizes]
  createdAt: AWSDateTime!
  timer: Timer
  showInCaseOfSuccess: Boolean
  audience: [Audience] @connection(name:"CreateContestAudience")
  participants: [Participants] @connection(name:"CreateContestParticipants")
  usersSharing: [UsersSharing] @connection(name:"CreateContestUsersSharing")
  usersLikes: [UsersLikes] @connection(name:"CreateContestUsersLikes")
  viewsVideo: [ViewsVideo] @connection(name:"CreateContestViewsVideo")
}

type ViewsVideo @model {
  createContest: CreateContest @connection(name: "CreateContestViewsVideo") 
  id: ID!
  name: String
  idUserView: String
  createdAt: AWSDateTime
  avatar: AWSURL
  uri: AWSURL
  didJustFinish: Boolean
  durationMillis: Int
  positionMillis: Int
  isPaused: Boolean
}

type UsersSharing @model {
  createContest: CreateContest @connection(name: "CreateContestUsersSharing") 
  id: ID!
  name: String
  idUserSharing: String
  whereItHasBeenShared: [String]
  createdAt: AWSDateTime
  avatar: AWSURL
  }

type UsersLikes @model {
  createContest: CreateContest @connection(name: "CreateContestUsersLikes") 
  id: ID!
  name: String
  idUserLike: String
  createdAt: AWSDateTime
  avatar: AWSURL
  }

type Timer {
  start: AWSDateTime
  end: AWSDateTime
}

type Audience @model {
  JSONdata: String
  createContest: CreateContest @connection(name: "CreateContestAudience") 
  id: ID!
  genders: [String]
  ages: [String]
  categoryContest: [String]
  countries: [String]
  nacionalities: [String]
  regionalIdentity: [String]
  sexualities: [String]
  maritalStatus: [String]
  academicLevelAchieved: [String]
  schools: [String]
  universities: [String]
  musicalGenre: [String]
  sports: [String]
  parentalCondition: [String]
  amountOfChildren: [String]
  amountOfSimblings: [String]
  politicalPeople: [String]
  peopleWhoVote: [String]
  occupation: [String]
  socioeconomicLevel: [String]
  rentOrOwnHouse: [String]
  rentOrOwnCar: [String]
  categoryPrizes: [String]
  createdAt: AWSDateTime!
}

type AboutTheUser {
    companyName: String
    location: Location
    titleInTheCompany: String
}

type Location {
  city: String
  country: String
  state: String
  street: String
}

type General {
    description: String
    instructions: String
    nameOfContest: String
    picture: Picture
    video: Video
}

type Picture {
    localUrl: AWSURL
    url: AWSURL
    name: String
    type: String
    blob: String    
}

type Video {
    localUrl: AWSURL
    url: AWSURL    
    name: String
    type: String
    blob: String
}

type Prizes {
    description: String
    prizeId: String
    name: String
    picture: Picture
}

type Participants @model {
  contestId: ID!
  id: ID!
  participantId: ID!
  nameUser: String
  comment: String
  video: Video
  picture: Picture
  avatar: AWSURL
  contest: CreateContest @connection(name: "CreateContestParticipants")
  createdAt: AWSDateTime!
  likesToParticipants: [LikesToParticipants] @connection(name:"ParticipantsLikesToParticipants")
  commentsToParticipants: [CommentsToParticipants] @connection(name:"ParticipantsCommentsToParticipants")
  shareParticipants: [ShareParticipants] @connection(name:"ShareParticipants")
  viewsParticipants: [ViewsParticipants] @connection(name:"ViewsParticipants")
}

type ViewsParticipants @model{
  participants: Participants @connection(name:"ViewsParticipants")
  participantsId: ID!
  id: ID!
  name: String
  idUserView: String
  uri: AWSURL
  didJustFinish: Boolean
  durationMillis: Int
  positionMillis: Int
  isPaused: Boolean
  createdAt: AWSDateTime
  avatar: AWSURL
}


type ShareParticipants @model{
  participants: Participants @connection(name:"ShareParticipants")
  id: ID!
  name: String
  idUserSharing: String
  whereItHasBeenShared: [String]
  createdAt: AWSDateTime
  avatar: AWSURL
}

type LikesToParticipants @model {
  participants: Participants @connection(name: "ParticipantsLikesToParticipants") 
  id: ID!
  name: String
  idUserLike: String
  createdAt: AWSDateTime
  avatar: AWSURL
  }

  type CommentsToParticipants @model{
  participants: Participants @connection(name: "ParticipantsCommentsToParticipants") 
  id: ID!
  name: String
  idUserComments: String
  createdAt: AWSDateTime
  avatar: AWSURL
  comments: String
  edited: String
  }

##################################################################### LISTOFCONTEST #####################################################################
type ContestCategory @model {
  id: ID!
  name: String!
  picture: AWSURL
  category: Category 
}

enum Category {
  GAMER
  SPIRITUAL_RELIGIOUS
  BEVERAGE
  MUSIC
  SPORT
  FOOD
  AMAZON_SELLERS
  MOVIES_TV_SHOWS_OTT
  ELECTRONICS
}

##################################################################### LISTOFPRIZES #####################################################################
type PrizesCategory @model {
  id: ID!
  name: String!
  picture: AWSURL
  category: PrizeCategory 
}

enum PrizeCategory {
  APPAREL_CLOTHING
  TRIPS
  CRYPTOCURRENCY
  SHOES
  ELECTRONICS
  GAMING
  TICKETS
  AMAZON
  CARS
  MILES
  COUPON_CODES
  HATS
  OTHERS
}

##################################################################### SUBMITAPRIZE #####################################################################
type SubmitPrize @model {
  id: ID!
  user: User @connection(name: "UserSubmitPrize")
  aboutTheCompany: AboutTheCompany!
  category: PrizeCategory!
  general: GeneralPrize!
  createdAt: AWSDateTime!
  share: Share
}

type AboutTheCompany {
  businessLocation: Location
  companyName: String
  generalInformation: String
}

type GeneralPrize {
  price: String
  nameOfPrize: String
  description: String
  picture: Picture
  video: Video
}

type Share {
    contentUserShare: String,
    footerContent: String,
    socialMediaHandle: String
    whatUserDo: String

}

##################################################################### ENGAGE #####################################################################
type Engage @model{
  expoPushToken: String
  JSONdata: String
  user: User @connection(name: "UserEngage")
  aboutThePersonality: AboutThePersonality!
  aboutTheOccupations: AboutTheOccupations! 
  createdAt: AWSDateTime!
}

type AboutTheOccupations {
  levelAchivied: String
  occupation: String
  rentOrOwnCar: String
  rentOrOwnHouse: String
  schools: String
  university: String
  socioeconomicLevel: String
  vote: String
}

type AboutThePersonality {
  amountOfChildren: String
  amountOfSimblings: String
  birthDate: AWSDateTime
  gender: String
  location: Location
  maritalStatus: String
  nacionality: String
  parentalCondition: String
  regionalIdentity: String
  sexuality: String
}

##################################################################### NOTIFICACTIONS #####################################################################
type Notifications @model{
  id: ID!
  nameOfcontest: String
  idUSerFrom: String!
  idUserTo: String!
  userFrom: String!
  userTo: String!
  expoPushToken: String!
  messageTitle: String!
  messageBody: String!
  JSONdata: String!
  createdAt: AWSDateTime!
  expirationDateWeek: AWSDateTime!
  avatar: AWSURL
}

####################################### [QUERYS] ##########################################

type Query {
  showParticipationByUser(userId: String!): String @function(name: "showParticipationByUser")
  filterAudienceForContest(preferences: String!): String @function(name: "filterAudienceForContest")
  sendNotification(notificationId: String!): String @function(name: "notifications")
  trending(params: String): String @function(name: "trendingInfluenceMeNow")
  listContest(category: String): String @function(name: "listContest")
  listCaseOfSuccess(params: String): String @function(name: "caseOfSuccess")
}