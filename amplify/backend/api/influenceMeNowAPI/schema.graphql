##################################################################### ESTRUCTURA DEL USUARIO #####################################################################
type User @model{
  id: ID!
  userId: ID!
  name: String!
  username: String!
  lastname: String
  email: AWSEmail!
  avatar: AWSURL
  phone: AWSPhone!
  datetime: AWSDateTime!
  scope: Scope
  createContest: [CreateContest] @connection(name: "UserCreateContest")
  submitPrize: [SubmitPrize] @connection(name: "UserSubmitPrize")
}

##################################################################### SCOPE #####################################################################

enum Scope {
  ENGAGE
  CREATECONTEST
  SUBMITPRIZE
}

##################################################################### CREATECONTEST #####################################################################

type CreateContest @model {
  id: ID!
  user: User @connection(name: "UserCreateContest")
  aboutTheUser: AboutTheUser!
  category: Category
  general: General!
  prizes: [Prizes]
  createdAt: AWSDateTime!
  timer: AWSDateTime
  audience: [Audience] @connection(name:"CreateContestAudience")
}

type Audience @model {
  createContest: CreateContest @connection(name: "CreateContestAudience") 
  id: ID!
  genders: [String]
  ages: [String]
  categoryContest: [String]
  countries: [String]
  nacionalities: [String]
  regionalIdentity: [String]
  sexualities: [String]
  maritalStatus: [String]
  academicLevelAchieved: [String]
  schools: [String]
  universities: [String]
  musicalGenre: [String]
  sports: [String]
  parentalCondition: [String]
  amountOfChildren: [String]
  amountOfSimblings: [String]
  politicalPeople: [String]
  peopleWhoVote: [String]
  ocuppation: [String]
  socioeconomicLevel: [String]
  rentOrOwnHouse: [String]
  rentOrOwnCar: [String]
  categoryPrizes: [String]
  createdAt: AWSDateTime!
  }

type AboutTheUser {
    companyName: String
    location: Location
    titleInTheCompany: String
}

type Location {
  city: String
  country: String
  state: String
  street: String
}

type General {
    description: String
    instructions: String
    nameOfContest: String
    picture: Picture
    video: Video
}

type Picture {
    localUrl: AWSURL
    url: AWSURL
    name: String
    type: String
    blob: String    
}

type Video {
    localUrl: AWSURL
    url: AWSURL    
    name: String
    type: String
    blob: String
}

type Prizes {
    description: String
    prizeId: String
    name: String
    picture: Picture
    video: Video
    price: String
}

##################################################################### LISTOFCONTEST #####################################################################
type ContestCategory @model {
  id: ID!
  name: String!
  picture: AWSURL
  category: Category 
}

enum Category {
  GAMER
  SPIRITUAL_RELIGIOUS
  BEVERAGE
  MUSIC
  SPORT
  FOOD
  AMAZON_SELLERS
  MOVIES_TV_SHOWS_OTT
  ELECTRONICS
}

##################################################################### LISTOFPRIZES #####################################################################
type PrizesCategory @model {
  id: ID!
  name: String!
  picture: AWSURL
  category: PrizeCategory 
}

enum PrizeCategory {
  APPAREL CLOTHING
  TRIPS
  CRYPTOCURRENCY
  SHOES
  ELECTRONICS
  GAMING
  TICKETS
  AMAZON
  CARS
  MILES
  COUPON CODES
  HATS
  OTHERS
}

##################################################################### SUBMITAPRIZE #####################################################################
type SubmitPrize @model {
  id: ID!
  user: User @connection(name: "UserSubmitPrize")
  aboutTheCompany: AboutTheCompany!
  category: PrizeCategory!
  general: GeneralPrize!
  createdAt: AWSDateTime!
}

type AboutTheCompany {
  businessLocation: Location
  companyName: String
  socialMediaHandle: SocialMediaHandle  
}

type SocialMediaHandle {
  facebook: String
  twitter: String
  instagram: String
  snapchat: String
}

type GeneralPrize {
  price: String
  nameOfPrize: String
  description: String
  instructions: String
  socialMediaHandle: SocialMediaHandle
  picture: Picture
  video: Video
}